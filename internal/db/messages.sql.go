// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: messages.sql

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createMessage = `-- name: CreateMessage :one
INSERT INTO messages (id, chat_id, author_role_id, content, created_at, updated_at)
VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6
)
RETURNING id, chat_id, author_role_id, content, created_at, updated_at
`

type CreateMessageParams struct {
	ID           uuid.UUID
	ChatID       uuid.UUID
	AuthorRoleID int32
	Content      string
	CreatedAt    time.Time
	UpdatedAt    time.Time
}

func (q *Queries) CreateMessage(ctx context.Context, arg CreateMessageParams) (Message, error) {
	row := q.db.QueryRowContext(ctx, createMessage,
		arg.ID,
		arg.ChatID,
		arg.AuthorRoleID,
		arg.Content,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i Message
	err := row.Scan(
		&i.ID,
		&i.ChatID,
		&i.AuthorRoleID,
		&i.Content,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
